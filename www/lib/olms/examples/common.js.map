{"version":3,"file":"common.js","mappings":"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,GACE/zG,EACA,SACA,cACAqO,EACAxmB,EACAqmH,EACA9R,KAIRkb,EAAQ99D,WACNu6D,GACE/zG,EACA,QACA,eACAqO,EACAxmB,EACAqmH,EACA9R,IAGJkb,EAAQrzD,UACN,GACE8vD,GACE/zG,EACA,SACA,cACAqO,EACAxmB,EACAqmH,EACA9R,KAIN1vG,EAAM8P,SAAS86G,GACfx2D,EAAOp0D,EAAM8pF,UACb9pF,EAAMs0D,aAAQr/C,GACdjV,EAAMgtD,UAAUhhD,GAChBi/G,GAAW,EACXJ,GAAY,EAEhB,MACEA,GAAY,CAEhB,CACF,CACF,CAEA,GAAY,GAARppH,GAA4B,WAAf6R,EAAM7R,KAAmB,GACtCwoH,EACFjqH,EAAQk5C,EAAO+wE,GAEZjqH,GACAA,EAAM4O,aACP5O,EAAM4oF,YACN5oF,EAAM8oF,cAEN9oF,EAAQ,IAAIw4D,EAAA,GACZtf,EAAO+wE,GAAgBjqH,GAEzB,MAAM4rH,EACJ,kBAAmBzB,EACf9C,GACE/zG,EACA,QACA,gBACAqO,EACAxmB,EACAqmH,EACA9R,GAEF,EACAmc,EAAoBrD,GACxBnB,GACE/zG,EACA,QACA,sBACAqO,EACAxmB,EACAqmH,EACA9R,GAEF2X,GACE/zG,EACA,QACA,wBACAqO,EACAxmB,EACAqmH,EACA9R,IAGEoc,EAActD,GAClBnB,GACE/zG,EACA,QACA,eACAqO,EACAxmB,EACAqmH,EACA9R,GAEF2X,GACE/zG,EACA,QACA,iBACAqO,EACAxmB,EACAqmH,EACA9R,IAGEqc,EAAoB1E,GACxB/zG,EACA,QACA,sBACAqO,EACAxmB,EACAqmH,EACA9R,GAEIsc,EACJJ,EACA,IACAC,EACA,IACAC,EACA,IACAC,EACFnB,EAAUlB,EAAesC,GACpBpB,IACHA,EAAU,IAAIzyD,EAAA,EAAO,CACnBR,OAAQi0D,EACRjzD,OACEkzD,GAAqBE,EAAoB,EACrC,IAAIzyD,EAAA,EAAO,CACTnjD,MAAO41G,EACPz/E,MAAOu/E,SAET52G,EACNyjD,KAAMozD,EACF,IAAIhzD,EAAA,EAAK,CACPxsB,MAAOw/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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/expr/expression.js","webpack://ol-mapbox-style/./node_modules/ol/expr/cpu.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/style.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/resolution.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/common.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\"\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(\n      !(src !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n    assert(\n      !image || (image && this.imgSize_),\n      '`imgSize` must be set when `image` is provided'\n    );\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      src !== undefined && src.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.0.0-dev.1692997994019';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import {expandUrl} from 'ol/tileurlfunction.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const request = options.transformRequest\n    ? options.transformRequest(url, resourceType) || new Request(url)\n    : new Request(url);\n  if (!request.headers.get('Accept')) {\n    request.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = request;\n  }\n  const pendingRequest = fetch(request)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [request, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nfunction getTransformedTilesUrl(tilesUrl, options) {\n  if (options.transformRequest) {\n    const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n    if (transformedRequest instanceof Request) {\n      return decodeURI(transformedRequest.url);\n    }\n  }\n  return tilesUrl;\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          })\n        );\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return getTransformedTilesUrl(\n              normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                metadata.request.url\n              ),\n              options\n            );\n          });\n          return Promise.resolve(tileJson);\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return getTransformedTilesUrl(\n            normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              styleUrl || location.href\n            ),\n            options\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.width = area.width;\n  imageCanvas.height = area.height;\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css'\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      ).slice(0);\n                      displacement[1] *= -1;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, imgSize, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(spriteImage, spriteImageData, iconColor),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor\n                          );\n                        }\n                        imgSize = [img.width, img.height];\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1}\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        imgSize = spriteImageSize;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        imgSize: imgSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined\n                )\n              : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (this.image) {\n        if (\n          ((this.wantedExtent_ &&\n            containsExtent(this.wantedExtent_, requestExtent)) ||\n            containsExtent(this.image.getExtent(), requestExtent)) &&\n          ((this.wantedResolution_ &&\n            fromResolutionLike(this.wantedResolution_) === requestResolution) ||\n            fromResolutionLike(this.image.getResolution()) ===\n              requestResolution)\n        ) {\n          return this.image;\n        }\n      }\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJSON,\n          options\n        );\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = decodeURI(transformed.url);\n      }\n    }\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        url: extentUrl,\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    return new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n    });\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = event.resolution;\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId)\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStyleFunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.'\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id)\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.'\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","p","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","a","n","o","exp","u","sqrt","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Property","CollectionEvent","constructor","element","index","super","Collection","array","options","on","once","un","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","ADD","removeAt","prev","REMOVE","setAt","except","disposed","dispose","disposeInternal","ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","changed","CHANGE","getExtent","getImage","getPixelRatio","getResolution","getState","LOADING","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","EMPTY","ImageTile","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","Image","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","undefined","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","event","parentNode","removeChild","display","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","layers","renderDeclutter","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","lastIndex","firstIndex","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","addChangeListener","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","CollectionEventType","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","getProperties","assign","getPropertiesInternal","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromString","cache","cacheSize","g","exec","el","body","rgb","fromNamed","hasAlpha","Number","normalize","fromStringInternal_","asArray","asColorLike","levels","info","warn","level","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","createCanvasContext2D","canvasPool","settings","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","clonedGeometries","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","Point","readPointGeometry","LineString","readLineStringGeometry","readPolygonGeometry","MultiPoint","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","toPromise","getter","Promise","reject","resolve","promiseGetter","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","deflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","orient","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","encoded","parser","parsers","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","createParser","withArgs","arg","operation","minArgs","maxArgs","argType","argCount","expression","gotType","expectedType","argValidator","returnType","buildExpression","expected","actual","compileExpression","compileAssertionExpression","nameExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileMatchExpression","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","buildStyle","evaluationContext","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","requireNumber","radius","radius1","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluator","requireSizeLike","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","rules","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","rulesToStyleFunction","toStyleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","PRERENDER","POSTRENDER","containerReused","preRender","clipped","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","code","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","pointResolution","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","METERS_PER_UNIT","RenderEvent","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","maxAngle","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","rotateWithView","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","builderTypes","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","beg","keep","saveTextStates_","p0","repeat","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","CanvasImmediateRenderer","VectorContext","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","offset_","offsetOrigin_","origin_","initialOptions_","iconImageSize","shared","cache_","cacheSize_","maxCacheSize_","maxCacheSize","ImageStyle","scaleArray_","displacement_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformStringDiv","transformString","abstract","uidCounter_","getUid","ol_uid","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","static","rgba","toArray","toArray01","toArray01PremultipliedAlpha","white","transparent","red","blue","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","stop","appendStopPair","fixupDegenerateStepCurve","base","curve","isStep","interpolated","convertTokenString","re","literal","ParsingError","message","Scope","bindings","has","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","sections","unformatted","section","serialize","serialized","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","types","string","number","boolean","Assertion","parsed","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","to","Xn","Zn","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolation","lower","upper","exponentialInterpolation","controlPoints","rest","interpolationFactor","outputLower","outputUpper","lowerValue","upperValue","difference","Coalesce","needsAnnotation","firstImage","Let","binding","At","In","IndexOf","fromIndex","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","_","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","register","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","convertComparisonOp","convertNegation","filters","convertInOp","convertHasOp","deref","derefLayers","ref","getKeyZXY","fromKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","startCharCode","stopCharCode","charCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformRequest","Request","headers","pendingRequest","fetch","response","ok","json","getGlStyle","glStyleOrUrl","trim","accessToken","getTransformedTilesUrl","tilesUrl","transformedRequest","tilejsonCache","getTileJson","glSource","cacheKey","promise","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","cssRule","cssText","processedFontFamilies","getFonts","templateUrl","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","head","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","getIconDeclutterMode","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","version","spriteImageSize","spriteImageUnSDFed","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","pattern","createPattern","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","dw","dh","previousAlpha","BaseImage","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","ImageCanvas","error_","getError","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","Triangulation","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","setResolutions","findNearestResolution","getImageInternal","requestExtent","requestWidth","requestHeight","getRequestExtent","handleImageChange","BaseTileLayer","BaseTile","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","features_","onLoad","setFeatures","onError","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","VectorTile","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","onChange","sprite","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","encodeURI","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}